@page "/register"

@using InnoGotchiGameFrontEnd.BLL.ComandModels.User;
@using InnoGotchiGameFrontEnd.Presentation.Pages.Identity.Models;
@using Microsoft.AspNetCore.Http;
@inherits CancellableComponent
@inject UserManager userManager;
@inject IConfiguration configuration;
@inject NavigationManager navigation;


<div>
    @foreach (var error in Errors)
    {
        <p class="text-danger">@error</p>
    }
</div>
<EditForm Model="@Data" OnValidSubmit="RegisterAsync" class="form">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="row">
        <div class="col bg-success bg-opacity-10 p-2">
            <h2>Данные</h2>
            <div class="form-group">
                <label class="form-label">Имя</label>
                <InputText id="firstName" @bind-Value="@Data.FirstName" class="form-control" />
            </div>
            <div class="form-group">
                <label class="form-label">Фамилия</label>
                <InputText id="lastName" @bind-Value="@Data.LastName" class="form-control" />
            </div>
            <div class="form-group">
                <label class="form-label">Почта</label>
                <InputText id="email" @bind-Value="@Data.Email" class="form-control" />
            </div>
            <div class="form-group row">
                <div class="col">
                    <label class="form-label">Аватарка</label>
                    <InputFile OnChange="@OnFileSelected" accept=".jpeg,.jpg,.png" class="form-control" />
                </div>
                @if (Data.Picture != null)
                {
                    <div class="col">
                        <ImageFromByteArray Image="@Data.Picture.Image" ImageType="@Data.Picture.Format" />
                    </div>
                }
            </div>
        </div>
        <div class="col bg-danger bg-opacity-10 p-2">
            <h2>Пароль</h2>
            <div class="form-group">
                <label class="form-label">Пароль</label>
                <InputText @bind-Value="@Data.Password" type="password" class="form-control" />
            </div>
            <div class="form-group">
                <label class="form-label">Повторите пароль</label>
                <InputText @bind-Value="@Data.RePassword" type="password" class="form-control" />
            </div>
        </div>
    </div>
    <input class="btn btn-primary" type="submit" />
</EditForm>

@code {
    private List<string> Errors;
    private AddUserDTOModel Data;
    protected override void OnInitialized()
    {
        Data = new AddUserDTOModel();
        Errors = new List<string>();
    }
    private async Task OnFileSelected(InputFileChangeEventArgs e)
    {
        var stream = new MemoryStream();
        var file = e.File;
        string imageType = file.ContentType;
        int imgSize = int.Parse(configuration.GetSection("ImageSizePx").Value);
        file = await file.RequestImageFileAsync(imageType, imgSize, imgSize);
        await file.OpenReadStream().CopyToAsync(stream);
        Data.Picture = new PictureDTO()
            {
                Name = Guid.NewGuid().ToString(),
                Description = "user_avatar",
                Format = imageType,
                Image = stream.ToArray()
            };
        this.StateHasChanged();
    }

    private async Task RegisterAsync()
    {
        var result = await userManager.CreateAsync(Data, _cts.Token);
        this.StateHasChanged();
        if (!result.IsComplete)
        {
            Errors = result.Errors;
        }
        else
        {
            navigation.NavigateTo("/login");
        }
    }
}
